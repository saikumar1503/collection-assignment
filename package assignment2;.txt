package assignment2;

import java.util.Objects;

 

public class AccountModel {
	private int accountNumber;

	private String accountHolderName;

	private int balance;

	private String location;

	public AccountModel() {
		super();
	}

	public AccountModel(int accountNumber, String accountHolderName, int balance, String location) {
		super();
		this.accountNumber = accountNumber;
		this.accountHolderName = accountHolderName;
		this.balance = balance;
		this.location = location;
	}

 

	public int getAccountNumber() {
		return accountNumber;
	}

 

	public void setAccountNumber(int accountNumber) {
		this.accountNumber = accountNumber;
	}

	public String getAccountHolderName() {
		return accountHolderName;
	}

 

	public void setAccountHolderName(String accountHolderName) {
		this.accountHolderName = accountHolderName;
	}

	public int getBalance() {
		return balance;
	}

 

	public void setBalance(int balance) {
		this.balance = balance;
	}

	public String getLocation() {
		return location;
	}

 

	public void setLocation(String location) {
		this.location = location;
	}

	@Override
	public int hashCode() {
		return this.accountNumber*8+this.balance*100/2;
	}

	@Override
	public boolean equals(Object obj) {

		AccountModel a=new AccountModel();
		if(obj instanceof AccountModel) {
			boolean b1=this.accountHolderName.equals(a.getAccountHolderName());
			boolean b2=this.balance==a.getBalance();
			boolean b3=this.location.equals(a.getLocation());
			boolean b4=this.accountNumber==a.getAccountNumber();

			return b1&&b2&&b3&&b4;
		}
		return false;
	}

}

 

AccountUI

 

package assignment2;

 

import java.util.HashMap;
import java.util.Map;
import java.util.Random;
import java.util.Scanner;


public class AccountUI {
	Scanner scan=new Scanner(System.in);
	Map<Integer,AccountModel> map=new HashMap<>();

 

	public static void main(String[] args) {
		AccountUI app=new AccountUI();
		while(true) {
			System.out.println(" ----- OPERATIONS ----");
			System.out.println("1. Insert Account to add it in Map ");
			System.out.println("2.GetAll Accounts Based on Location");
			System.out.println("3.Get All Accounts Based on Salary Range ");
			System.out.println("4.Get Account Based on Account Number");

 

			System.out.println("0. Exit");
			System.out.println("Enter Option :- ");

 

			switch(new Scanner(System.in).nextInt()) {
			case 1:
				app.addAccountToMap();
				break;

 

			case 2:
				app.getAllAccountsBasedOnLocation();
				break;

 

			case 3:
				app.getAccountBasedOnBalanceRange();
				break;

 

			case 4:
				app.getAccountBasedOnAccountNumber();
				break;

 

			case 0:
				System.out.println("ProcessEnded");
				System.exit(0);
			}

		}//end of while

	}//end of main

 

	private void getAccountBasedOnAccountNumber() {
		System.out.print("Enter AccountNumber to be Searched: ");
		int accountNumber=scan.nextInt();
		for(Map.Entry<Integer, AccountModel> entry: map.entrySet()) {
			int key=entry.getKey();
			AccountModel a=entry.getValue();
			if(a.getAccountNumber()==accountNumber) {
				displayAccounts(a);
			}

 

		}

 

	}

	private void getAccountBasedOnBalanceRange() {
		System.out.print("Enter Minimum Amount: ");
		int r1=scan.nextInt();
		System.out.print("Enter Minimum Amount: ");
		int r2=scan.nextInt();

 

		for(Map.Entry<Integer, AccountModel> entry: map.entrySet()) {
			int key=entry.getKey();
			AccountModel a=entry.getValue();
			if(a.getBalance()>=r1 && a.getBalance()<=r2) {
				displayAccounts(a);
			}

 

		}

 

	}

	private void getAllAccountsBasedOnLocation() {
		System.out.print("Enter Location to be Searched: ");
		String location=scan.next();
		for(Map.Entry<Integer, AccountModel> entry: map.entrySet()) {
			int key=entry.getKey();
			AccountModel a=entry.getValue();
			if(a.getLocation().equals(location)) {
				displayAccounts(a);
			}

 

		}

 

	}

	private void addAccountToMap() {
		int accountNumber=new Random().nextInt(1000000);

		System.out.print("Enter Account Holder Name: ");
		String name=scan.next();

		System.out.print("Enter Balance: ");
		int balance=scan.nextInt();

		System.out.print("Enter Location: ");
		String location=scan.next();

		AccountModel a=new AccountModel(accountNumber,name,balance,location);
		map.put(a.getAccountNumber(), a);

 

	}

 

 

	//method to print accounts
	private void displayAccounts(AccountModel a) {
		System.out.println("Account Number = " + a.getAccountNumber() + ", Account Holder Name = " + a.getAccountHolderName() + ", Balance = "
				+ a.getBalance() + ", Location = " + a.getLocation());

 

 

	}

 

}

 

LowBalanceException

 

package assignment2;

 

public class LowBalanceException extends Exception {
	public LowBalanceException(String s) {
		super(s);
	}

}